apply plugin: 'eclipse'
apply plugin: 'groovy'
 
apply plugin:'application'
mainClassName = "com.log.application.LogMain"
 def enc = 'UTF-8'
[ compileGroovy,  compileTestGroovy].each{ it.options.encoding = enc }
[compileGroovy, compileTestGroovy].each{ it.groovyOptions.encoding = enc }




 repositories {
    mavenCentral()
}
 


run {
	if ( project.hasProperty("appArgs") ) {
		args Eval.me(appArgs)
	}
}


	


dependencies {
	
  compile( "org.codehaus.groovy:groovy-all:2.2.1")  
  compile("org.eclipse.jetty.aggregate:jetty-all:7.6.15.v20140411")		
  compile( 'com.jcraft:jsch:0.1.51')  
  compile( "org.xerial:sqlite-jdbc:3.7.2")   	
	

	
}
 
task initProject () << {
    if (hasProperty(initPlugins)) {
        initPlugins.split(',').each { plug -> 
            project.apply { 
                plugin(plug.trim()) 
            } 
        }
    }
 
    project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { dir ->
        dir.mkdirs()
    }
}
//,dependsOn:[':compileGroovy']
task uberjar(type: Jar) {
    from files(sourceSets.main.output.classesDir)
	from files(sourceSets.main.output.resourcesDir)
    from(configurations.runtime.asFileTree.files.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
       attributes 'Main-Class': 'com.log.application.LogMain'
    }
}
